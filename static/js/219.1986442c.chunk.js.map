{"version":3,"file":"static/js/219.1986442c.chunk.js","mappings":"gTAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAI1BC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gJAUpBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oEAMpBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAOpBO,EAAWT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2FAOnBS,EAAgBX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2F,mBCerC,EA1Ca,WACX,IAAAW,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAqB9B,OAlBAG,EAAAA,EAAAA,YAAU,WAIc,SAAAC,IAUrB,OAVqBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAtB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEIR,GAAa,GAAMO,EAAAE,KAAA,GACIC,EAAAA,EAAAA,GAAUf,GAAS,KAAD,EAAnCW,EAAQC,EAAAI,KACdjB,GAAOkB,EAAAA,EAAAA,GAAKN,EAASb,OAAOc,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BO,QAAQC,MAAKR,EAAAM,IAAQ,QAED,OAFCN,EAAAC,KAAA,GAErBR,GAAa,GAAOO,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,yBAEvBa,MAAA,KAAAC,UAAA,CAbIxB,GAEJ,WACqBO,EAAAgB,MAAC,KAADC,UAAA,CAWtBC,EAEF,GAAG,CAACzB,KAEF0B,EAAAA,EAAAA,MAAC9C,EAAa,CAAA+C,SAAA,CACXvB,IAAcwB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACtBD,EAAAA,EAAAA,KAAC5C,EAAQ,CAAA2C,SACR7B,EAAKgC,KAAI,SAAAC,GAA2C,IAAzCC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAC/B,OACET,EAAAA,EAAAA,MAACxC,EAAQ,CAAAyC,SAAA,EACPC,EAAAA,EAAAA,KAACxC,EAAO,CAACgD,IAAG,GAAAC,OAAKF,EAAcG,EAAAA,EAAkBH,EAAcI,EAAAA,GAAkBC,IAAKP,KACtFP,EAAAA,EAAAA,MAACpC,EAAQ,CAAAqC,SAAA,CAAC,SAAOM,MACjBP,EAAAA,EAAAA,MAAClC,EAAa,CAAAmC,SAAA,CAAC,cAAYO,OAHdF,EAMnB,QAIN,C,gFC/CaS,E,QAAY5D,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+B,SCCtB8C,EAAS,WACpB,OACED,EAAAA,EAAAA,KAACa,EAAS,CAAAd,UACRC,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJC,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,SACNC,UAAU,gBACVC,aAAc,CACZC,eAAgB,UAElBC,SAAS,KAIjB,C,8ECnBO,IAAMZ,EAAkB,kCAClBC,EACX,6E,kMCAIY,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,eAAAtB,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA4C,EAAA,OAAA7C,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDsC,EAAAA,EAAAA,IAAU,+BAADf,OAAgCc,IAAU,KAAD,EAA3D,OAARG,EAAQ1C,EAAAI,KAAAJ,EAAA2C,OAAA,SACPD,EAASE,MAAI,wBAAA5C,EAAAU,OAAA,GAAAZ,EAAA,KACrB,kBAHsB,OAAAqB,EAAAR,MAAA,KAAAC,UAAA,KAKViC,EAAU,eAAAC,GAAAlD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkD,EAAO3D,GAAO,IAAAsD,EAAA,OAAA7C,IAAAA,MAAA,SAAAmD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACfsC,EAAAA,EAAAA,IAAU,UAADf,OAAWrC,EAAO,aAAAqC,OAAYc,IAAU,KAAD,EAAzD,OAARG,EAAQM,EAAA5C,KAAA4C,EAAAL,OAAA,SACPD,EAASE,MAAI,wBAAAI,EAAAtC,OAAA,GAAAqC,EAAA,KACrB,gBAHsBE,GAAA,OAAAH,EAAAnC,MAAA,KAAAC,UAAA,KAKVT,EAAS,eAAA+C,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsD,EAAO/D,GAAO,IAAAsD,EAAA,OAAA7C,IAAAA,MAAA,SAAAuD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,cAAAkD,EAAAlD,KAAA,EACdsC,EAAAA,EAAAA,IAAU,UAADf,OAAWrC,EAAO,qBAAAqC,OAAoBc,IAAU,KAAD,EAAjE,OAARG,EAAQU,EAAAhD,KAAAgD,EAAAT,OAAA,SACPD,EAASE,MAAI,wBAAAQ,EAAA1C,OAAA,GAAAyC,EAAA,KACrB,gBAHqBE,GAAA,OAAAH,EAAAvC,MAAA,KAAAC,UAAA,KAKT0C,EAAY,eAAAC,GAAA3D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2D,EAAOpE,GAAO,IAAAsD,EAAA,OAAA7C,IAAAA,MAAA,SAAA4D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAvD,KAAA,EACjBsC,EAAAA,EAAAA,IAAU,UAADf,OAAWrC,EAAO,qBAAAqC,OAAoBc,IAAU,KAAD,EAAjE,OAARG,EAAQe,EAAArD,KAAAqD,EAAAd,OAAA,SACPD,EAASE,MAAI,wBAAAa,EAAA/C,OAAA,GAAA8C,EAAA,KACrB,gBAHwBE,GAAA,OAAAH,EAAA5C,MAAA,KAAAC,UAAA,KAKZ+C,EAAiB,eAAAC,GAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgE,EAAOC,GAAS,IAAApB,EAAA,OAAA7C,IAAAA,MAAA,SAAAkE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACxBsC,EAAAA,EAAAA,IAAU,yBAADf,OAA0Bc,EAAM,WAAAd,OAAUqC,EAAS,gCAA+B,KAAD,EAAnG,OAARpB,EAAQqB,EAAA3D,KAAA2D,EAAApB,OAAA,SACPD,EAASE,MAAI,wBAAAmB,EAAArD,OAAA,GAAAmD,EAAA,KACrB,gBAH6BG,GAAA,OAAAJ,EAAAjD,MAAA,KAAAC,UAAA,I","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","imgLinks/imgLinks.js","servers/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastContainer = styled.div`\n  padding: 20px 0px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 0px;\n  padding: 0px;\n`;\n\nexport const CastItem = styled.li`\n  height: 400px;\n  width: 200px;\n  border-radius: 8px;\n`;\n\nexport const ImgCast = styled.img`\n  height: 300px;\n  width: 200px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CastName = styled.p`\n  text-align: center;\n  color: black;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nexport const CastCharacter = styled.p`\n  text-align: center;\n  color: black;\n  font-size: 16px;\n  font-weight: 500;\n`;","import { BASE_POSTER_URL, DEFAULT_POSTER } from \"imgLinks/imgLinks\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"servers/api\";\nimport { CastList, CastContainer, CastItem, ImgCast, CastName, CastCharacter} from \"./Cast.styled\";\nimport { Loader } from 'components/Loader/Loader';\n\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState([])\n  const { movieId } = useParams();\n  const [isLiading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function getCast() {\n      try {\n        setIsLoading(true);\n        const showCast = await fetchCast(movieId);\n        setCast([...showCast.cast]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getCast();\n    \n  }, [movieId])\n  return (\n    <CastContainer>\n      {isLiading && (<Loader/>)}\n      <CastList>\n      {cast.map(({id, name, character, profile_path }) => {\n        return (\n          <CastItem key={id}>\n            <ImgCast src={`${profile_path? BASE_POSTER_URL + profile_path: DEFAULT_POSTER}`} alt={name} />\n            <CastName>Name: {name}</CastName>\n            <CastCharacter>Character: {character}</CastCharacter>\n          </CastItem>\n        )\n      })}\n      </CastList>\n    </CastContainer>\n  );\n}\n\nexport default Cast;","import styled from \"styled-components\";\n\nexport const LoaderDiv = styled.div`\n  margin-top: 20px;\n`;","import { Watch } from 'react-loader-spinner';\nimport { LoaderDiv } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderDiv>\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"orange\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{\n          justifyContent: 'center'\n        }}\n        visible={true}\n      />\n    </LoaderDiv>\n  );\n}","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nexport const DEFAULT_POSTER =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';","import axios from \"axios\";\n\nconst apiKey = '54ea2173c00863219e76419305eca11f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrend = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n  return response.data;\n}\n\nexport const fetchMovie = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n  return response.data;\n}\n\nexport const fetchCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${apiKey}`);\n  return response.data;\n}\n\nexport const fetchReviews = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${apiKey}`);\n  return response.data;\n}\n\nexport const fetchMoviesByName = async (movieNmae) => {\n  const response = await axios.get(`/search/movie?api_key=${apiKey}&query=${movieNmae}&include_adult=false&page=1`);\n  return response.data;\n}"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","ImgCast","_templateObject4","CastName","_templateObject5","CastCharacter","_templateObject6","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","_useState3","_useState4","isLiading","setIsLoading","useEffect","_getCast","_asyncToGenerator","_regeneratorRuntime","_callee","showCast","_context","prev","next","fetchCast","sent","_toConsumableArray","t0","console","error","finish","stop","apply","arguments","getCast","_jsxs","children","_jsx","Loader","map","_ref","id","name","character","profile_path","src","concat","BASE_POSTER_URL","DEFAULT_POSTER","alt","LoaderDiv","Watch","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","apiKey","axios","fetchTrend","response","abrupt","data","fetchMovie","_ref2","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByName","_ref5","_callee5","movieNmae","_context5","_x4"],"sourceRoot":""}